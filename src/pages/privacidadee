import styles from "../main.module.css"
import Link from 'next/link'

export default () => {

	return(
		<div className={styles.mainContainer}>
			<div className={`${styles.textBox1Tittle} ${styles.tittleAfter}`}>Seguran√ßa com Senhas üíæ</div>
			<p className={styles.firstParagraph}>√© fundamental criar senhas fortes e complexas. Isso significa utilizar uma combina√ß√£o de letras mai√∫sculas e min√∫sculas, n√∫meros e s√≠mbolos especiais, como @, #, $ e %. Essa diversidade de caracteres torna a senha mais resistente a ataques automatizados que tentam diversas combina√ß√µes poss√≠veis</p>
			<p className={`${styles.paragraphSubPage}`}>Outro fator importante na cria√ß√£o de senhas seguras √© o comprimento. Senhas mais longas tendem a ser mais seguras, sendo recomendado o uso de pelo menos 12 caracteres. Uma t√©cnica eficaz √© utilizar frases de senha, que combinam v√°rias palavras, n√∫meros e s√≠mbolos, resultando em uma sequ√™ncia longa e complexa. Por exemplo, a frase "C4feC0mLe1t3!" √© dif√≠cil de adivinhar e oferece um bom n√≠vel de seguran√ßa
			</p>
			<p className={`${styles.paragraphSubPage}`}>
			Al√©m da cria√ß√£o de senhas fortes, a gest√£o dessas senhas √© igualmente importante. Uma pr√°tica recomendada √© n√£o reutilizar a mesma senha para diferentes contas. Isso evita que, caso uma senha seja comprometida, o acesso a outras contas tamb√©m seja afetado.
			</p>
			<p className={styles.paragraphSubPage}>A troca peri√≥dica de senhas tamb√©m √© uma medida importante para manter a seguran√ßa. Alterar as senhas regularmente minimiza o risco de que uma senha comprometida permane√ßa em uso por muito tempo. Al√©m disso, √© prudente ativar a autentica√ß√£o em duas etapas sempre que poss√≠vel. Essa medida adiciona uma camada extra de seguran√ßa, exigindo um segundo fator de verifica√ß√£o al√©m da senha, como um c√≥digo enviado para o celular.
			</p>

			<Link href="/" className={`${styles.homeBtn} ${styles.tittleAfter}`}>Home</Link>
		</div>		
	)

}
